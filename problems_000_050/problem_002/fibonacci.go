// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even-valued terms.
//
// I decided to try out the channels and see how they work in solving this problem.
package main

func fibEven(c chan int64, br int64) {
	x, y := int64(1), int64(1)
	for y < br {
		if y%2 == 0 {
			c <- y
		}
		x, y = y, x+y
	}
	close(c)
}

func main() {
	c := make(chan int64, 1)
	go fibEven(c, 4000000)
	var total int64
	for i := range c {
		total += i
	}
	print(total)
}
